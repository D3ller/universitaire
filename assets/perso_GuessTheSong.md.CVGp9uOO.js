import{_ as e,c as s,o as a,a1 as n}from"./chunks/framework.DTR-fORK.js";const k=JSON.parse('{"title":"GuessTheSong","description":"","frontmatter":{},"headers":[],"relativePath":"perso/GuessTheSong.md","filePath":"perso/GuessTheSong.md"}'),i={name:"perso/GuessTheSong.md"},t=n(`<h1 id="guessthesong" tabindex="-1">GuessTheSong <a class="header-anchor" href="#guessthesong" aria-label="Permalink to &quot;GuessTheSong&quot;">​</a></h1><p>C’était un projet que j’ai réalisé avec un front-end en Vue.js et un back-end en Spring Boot (Kotlin). L’objectif était de créer un jeu interactif où l’utilisateur connecte son compte Spotify, puis doit deviner le titre des morceaux. Chaque extrait dure 10 secondes, et le jeu se déroule sur 10 musiques consécutives.</p><p>La partie la plus complexe a été l’intégration avec l’API Spotify, que je découvrais pour la première fois. J’ai dû gérer la connexion OAuth, la récupération des morceaux et la synchronisation avec le front.</p><p>Ce projet a également marqué ma première vraie utilisation de Kotlin dans un projet complet. J’ai beaucoup apprécié travailler avec ce langage, notamment grâce à sa programmation orientée objet et à la robustesse qu’il apporte côté serveur.</p><p>Même si la mise en place de l’API et la découverte d’un nouveau langage ont représenté un vrai défi, ce projet m’a permis de consolider mes compétences en back-end avec Kotlin/Spring Boot, d’apprendre à connecter un service externe complexe comme Spotify, et de renforcer mes connaissances en Vue.js pour le développement d’interfaces interactives.</p><p>Modele de data de Kotlin</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.kora.models</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kotlinx.serialization.Serializable</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Serializable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data class GuessResponse(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    val correct: Boolean,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    val title: String,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    val artist: String</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,7),o=[t];function r(l,p,c,d,u,h){return a(),s("div",null,o)}const m=e(i,[["render",r]]);export{k as __pageData,m as default};
